c
sfs.errors.messages
c
items
c
cc
product_name
code
words[1..].join(' ')
c
excel_integration.errors.messages
c
row_data.values[0]
row_data.last
row_data
row_data = Hash[[header, excel.row(i)].transpose]
row_data.first
c
row_data
c
product_entry_params['price_in_percentage']
c
row_data = Hash[[header, excel.row(i)].transpose]
row_data
c
row_data
c
row_data
row_data = Hash[[header, excel.row(i)].transpose]
i
header
c
header
product_category
c
мси       
name
 name
Hash[[header, excel.row(i)].transpose]
c
header
c
excel_data
c
product_entry_params['excel_data'].class
c
product_entry_params['excel_data']
File.read(product_entry_params['excel_data'])
product_entry_params['excel_data']
c
diff
      diff = debt_operations.price_in_usd.отдача.sum(:price) - debt_operations.price_in_usd.приём.sum(:price)
debt_operations.price_in_uzs.приём.sum(:price)
debt_operations.price_in_uzs.отдача.sum(:price)
debt_operations.price_in_uzs.приём.sum(:price)
c
debt_operations.price_in_usd.приём.sum(:price)
debt_operations.price_in_uzs.отдача.sum(:price)
in_usd
debt_operations.price_in_usd.отдача.sum(:price)
c
created_at.beginning_of_day
c
anchor
c
first_record
c
delivery_from_counterparty
!sale.nil?
first_record
c
params[:new_income][:price]
c
params[:new_income][:price]
c
params[:new_income][:price]
params[:price]
c
params[:price].to_i <= 0
params[:price]
continue
@transaction_history
continue
@expenditure
continue
user.name.join
user.email
user.errors.messages
continue
User.last.email
continue
User.last.email
continue
User.last.email
continue
User.last.email
params[:user][:passwords]
params[:name]
params[:password]
continue
params.dig(:q, :date).blank?
continue
outcomer_params['role']
continue
quantity
product_id
index
continue
index
continue
new_hash.to_h
product_id
index
quantity
index
product_id
new_hash.to_h
quantity
continue
hash.to_a
new_hash
data[data.length - 1][1].to_i
data
data[data.length - 1][1].to_i
 data[data.length - 3][1]
data[0][data.length - 3]
data.slice(0, data.length - 3)
data
continue
data
hash
continue
hash
continue
outcomer_id
hash
continue
income_type
continue
@income.errors.messages
continue
product_price
continue
expenditure_params.product_id
continue
params[:new_income].permit!.to_h.to_a.slice(0,4)
continue
params.dig(:q, :created_at_lteq)
till
continue
params[:new_billet].permit!.to_h.to_a.to_h
continue
    byebug
params
continue
params
continue
params
continue
params
continue
params
continue
waste_paper_proportion.proportion_details.count
continue
expenditure_params
@expenditure.errors.messages
continue
current_user.role
continue
params.dig(:q, :date).to_date.beginning_of_day
continue
 @expenditure.errors.messages
continue
old_record
old_record.quantity
continue
product_price
continue
product_price
continue
product_price
continue
self.product_price
product_price
continue
@expenditure
continue
@expenditure
@expenditure.expenditure_type
continue
@expenditure.expenditure_type
continue
@expenditure.errors.messages
continue
expenditure_params
